{"version":3,"sources":["components/TodoListTemplate.js","components/TodoInput.js","components/TodoItem.js","components/TodoItemList.js","components/Palette.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListTemplate","form","children","palette","className","TodoInput","value","onChange","onCreate","onKeyPress","color","style","onClick","TodoItem","nextProps","nextState","this","props","checked","text","id","onToggle","onRemove","e","stopPropagation","Component","TodoItemList","todos","todoList","map","Color","active","background","Palette","colors","selected","onSelect","colorList","App","state","input","handleChange","setState","target","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","nextTodos","handleRemove","filter","handleSelectColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6bcc515.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoListTemplate.css';\r\n\r\nconst TodoListTemplate = ({form, children,palette}) => {\r\n  return (\r\n    <main className=\"todo-list-template\">\r\n      <div className=\"title\">\r\n        To Do List\r\n      </div>\r\n      <section className=\"palette-wrapper\">\r\n        {palette}\r\n      </section>\r\n      <section className=\"form-wrapper\">\r\n        {form}\r\n      </section>\r\n      <section className=\"todos-wrapper\">\r\n        { children }\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoListTemplate;\r\n","import React from 'react';\r\nimport './TodoInput.css';\r\n\r\nconst TodoInput = ({value, onChange, onCreate, onKeyPress, color}) => {\r\n  return (\r\n    <div className=\"form\">\r\n      <input value={value} onChange={onChange} onKeyPress={onKeyPress} style={{color}}/>\r\n      <div className=\"create-button\" onClick={onCreate}>\r\n        추가\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n","import React, { Component } from 'react';\r\nimport './TodoItem.css';\r\n\r\nclass TodoItem extends Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.checked !== nextProps.checked;\r\n  }\r\n  \r\n  render() {\r\n    const { text, checked, id, color, onToggle, onRemove } = this.props;\r\n\r\n    return (\r\n      <div className=\"todo-item\" onClick={() => onToggle(id)}>\r\n        <div className=\"remove\" onClick={(e) => {\r\n          e.stopPropagation(); // onToggle 이 실행되지 않도록 함\r\n          onRemove(id)}\r\n        }>&times;</div>\r\n        <div style={{ color }} className={`todo-text ${checked && 'checked'}`}>\r\n          <div>{text}</div>\r\n        </div>\r\n        {\r\n          checked && (<div className=\"check-mark\">&#x2713;</div>)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nclass TodoItemList extends Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.todos !== nextProps.todos;\r\n  }\r\n  \r\n  render() {\r\n    const { todos, onToggle, onRemove, color} = this.props;\r\n    \r\n    const todoList = todos.map(\r\n      ({id, text, checked, color}) => (\r\n        <TodoItem\r\n          id={id}\r\n          text={text}\r\n          checked={checked}\r\n          color={color}\r\n          onToggle={onToggle}\r\n          onRemove={onRemove}\r\n          key={id}\r\n        />\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        {todoList}    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItemList;\r\n","import React from 'react';\r\nimport './Palette.css';\r\n\r\nconst Color = ({ color, active, onClick }) => {\r\n  return (\r\n    <div className={`color ${active && 'active'}`} style={{ background: color}} onClick={onClick}>\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nconst Palette = ({colors, selected, onSelect}) => {\r\n  const colorList = colors.map(\r\n    (color) => (<Color color={color} active={selected===color} onClick={() => onSelect(color)} key={color}/>)\r\n  );\r\n  return (\r\n    <div className=\"palette\">\r\n      {colorList}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Palette;\r\n","import React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport TodoInput from './components/TodoInput';\nimport TodoItemList from './components/TodoItemList';\nimport Palette from './components/Palette';\n\n\nconst colors = ['#343a40', '#f03e3e', '#12b886', '#228ae6'];\n\nclass App extends Component {\n\n  id = 3 // 이미 0,1,2 가 존재하므로 3으로 설정\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: 'React 공부하기', checked: false },\n      { id: 1, text: 'React 소개', checked: true },\n      { id: 2, text: 'React 예제 만들기', checked: false },\n      { id: 3, text: 'HTML + CSS 공부하기', checked: false },\n    ],\n    color: '#343a40'\n  }\n\n  handleChange = (e) => {\n    this.setState({ input: e.target.value });\n                    // input 의 다음 바뀔 값\n  }\n\n  handleCreate = () => {\n    const { input, todos, color } = this.state;\n    this.setState({\n      input: '',     \n      todos: todos.concat({ // concat으로 배열에 추가\n        id: this.id++,\n        text: input,\n        checked: false,\n        color\n      })\n    });\n  }\n\n  handleKeyPress = (e) => { // Enter면 handleCreate 호출\n    if(e.key === 'Enter') {\n      this.handleCreate();\n    }\n  }\n\n  handleToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index]; // 선택한 객체\n\n    const nextTodos = [...todos]; // 배열을 복사\n    \n    // 기존의 값들을 복사하고, checked 값을 덮어쓰기\n    nextTodos[index] = { \n      ...selected, \n      checked: !selected.checked\n    };\n\n    this.setState({\n        todos: nextTodos\n    });\n  }\n\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  handleSelectColor = (color) => {\n    this.setState({\n      color\n    })\n  }\n\n  render() {\n    const { input, todos, color } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n\n    return (\n      <TodoListTemplate\n      form={(\n        <TodoInput \n          value={input}\n          onKeyPress={handleKeyPress}\n          onChange={handleChange}\n          onCreate={handleCreate}\n          color={color}\n        />\n      )}\n        palette={(\n          <Palette colors={colors} selected={color} onSelect={handleSelectColor}/>\n        )}>\n        <TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove}/>\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}